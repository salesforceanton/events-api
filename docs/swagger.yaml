definitions:
  domain.Event:
    properties:
      description:
        type: string
      id:
        type: integer
      organizerId:
        type: integer
      startDatetime:
        type: string
      timezoneId:
        type: string
      title:
        type: string
    required:
    - startDatetime
    - title
    type: object
  domain.SaveEventRequest:
    properties:
      description:
        type: string
      startDatetime:
        type: string
      timezoneId:
        type: string
      title:
        type: string
    required:
    - startDatetime
    - title
    type: object
  domain.User:
    properties:
      email:
        type: string
      password:
        type: string
      username:
        type: string
    required:
    - email
    - password
    - username
    type: object
  handler.ErrorResponse:
    properties:
      message:
        type: string
    type: object
  handler.SignInInput:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
info:
  contact: {}
  description: API Server for booking Events
  title: Events API
  version: "1.0"
paths:
  /api/events/:
    get:
      consumes:
      - application/json
      description: Get all events available for current user
      operationId: get-all
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.Event'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: Get all
      tags:
      - Events
    post:
      consumes:
      - application/json
      description: Create Event record with current User as Organizer
      operationId: create
      parameters:
      - description: Request
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/domain.SaveEventRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: Create
      tags:
      - Events
  /api/events/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Event with defined Id if current User has access to this
        Event record
      operationId: delete
      parameters:
      - description: Event Id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: Delete
      tags:
      - Events
    get:
      consumes:
      - application/json
      description: Get Event data by defined Id if current User has access to this
        Event record
      operationId: get-by-id
      parameters:
      - description: Event Id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Event'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: Get by Id
      tags:
      - Events
    post:
      consumes:
      - application/json
      description: Update defined Event data if current User has access to this Event
        record
      operationId: update
      parameters:
      - description: Event Id
        in: path
        name: id
        required: true
        type: integer
      - description: Request
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/domain.SaveEventRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/domain.Event'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: Update
      tags:
      - Events
  /auth/sign-in:
    post:
      consumes:
      - application/json
      description: Login via Username and Password credentials
      operationId: login
      parameters:
      - description: Credentials
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/handler.SignInInput'
      produces:
      - application/json
      responses:
        "200":
          description: token
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: Login
      tags:
      - Auth
  /auth/sign-up:
    post:
      consumes:
      - application/json
      description: Register a new User in the system
      operationId: sign-up
      parameters:
      - description: Account Info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/domain.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: Registration
      tags:
      - Auth
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
